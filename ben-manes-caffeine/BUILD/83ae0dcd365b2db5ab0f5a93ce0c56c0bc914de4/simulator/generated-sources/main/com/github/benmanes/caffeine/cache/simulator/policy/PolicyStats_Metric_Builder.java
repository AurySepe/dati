package com.github.benmanes.caffeine.cache.simulator.policy;

import com.google.common.collect.ImmutableSet;

/**
 * Generated by <a href="https://github.com/h908714124/auto-builder">
 * auto-builder 2.9.3</a>
 */
public final class PolicyStats_Metric_Builder {
  private String name;

  private Object value;

  private PolicyStats.Metric.MetricType type;

  private boolean required;

  private ImmutableSet<Policy.Characteristic> characteristics;

  private ImmutableSet.Builder<Policy.Characteristic> characteristicsBuilder;

  private PolicyStats_Metric_Builder() {
  }

  private void init(PolicyStats.Metric input) {
    this.name = input.name();
    this.value = input.value();
    this.type = input.type();
    this.required = input.required();
    this.characteristics = input.characteristics();
  }

  public PolicyStats.Metric build() {
    PolicyStats.Metric result = new AutoValue_PolicyStats_Metric(
    name,
    value,
    type,
    required,
    characteristicsBuilder != null ? characteristicsBuilder.build() : characteristics != null ? characteristics : ImmutableSet.of());
    return result;
  }

  public static PolicyStats_Metric_Builder builder() {
    return new PolicyStats_Metric_Builder();
  }

  public static PolicyStats_Metric_Builder toBuilder(PolicyStats.Metric input) {
    PolicyStats_Metric_Builder builder = new PolicyStats_Metric_Builder();
    builder.init(input);
    return builder;
  }

  public static PolicyStats_Metric_Builder builder(PolicyStats.Metric input) {
    return toBuilder(input);
  }

  public final PolicyStats_Metric_Builder name(String name) {
    this.name = name;
    return this;
  }

  public final PolicyStats_Metric_Builder value(Object value) {
    this.value = value;
    return this;
  }

  public final PolicyStats_Metric_Builder type(PolicyStats.Metric.MetricType type) {
    this.type = type;
    return this;
  }

  public final PolicyStats_Metric_Builder required(boolean required) {
    this.required = required;
    return this;
  }

  public final PolicyStats_Metric_Builder characteristics(
      Iterable<Policy.Characteristic> characteristics) {
    this.characteristics = characteristics != null ? ImmutableSet.copyOf(characteristics) : null;
    this.characteristicsBuilder = null;
    return this;
  }

  public final PolicyStats_Metric_Builder addToCharacteristics(Policy.Characteristic value) {
    if (this.characteristicsBuilder == null) {
      this.characteristicsBuilder = ImmutableSet.builder();
    }
    if (this.characteristics != null) {
      this.characteristicsBuilder.addAll(this.characteristics);
      this.characteristics = null;
    }
    this.characteristicsBuilder.add(value);
    return this;
  }

  public final PolicyStats_Metric_Builder addToCharacteristics(
      Iterable<Policy.Characteristic> values) {
    if (values == null) {
      return this;
    }
    if (this.characteristicsBuilder == null) {
      this.characteristicsBuilder = ImmutableSet.builder();
    }
    if (this.characteristics != null) {
      this.characteristicsBuilder.addAll(this.characteristics);
      this.characteristics = null;
    }
    this.characteristicsBuilder.addAll(values);
    return this;
  }
}
